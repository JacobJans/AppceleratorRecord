= AppceleratorRecord
(ActiveRecord for Appcelerator)

This project exists in an effort to make it as simple as possible to create models in Appcelerator much like ActiveRecord does for Rails without having to duplicate basic finders and CRUD operations.

Any help on this project would be appreciated.

=== Usage

A new model would look like

  //only need to include these once, preferably in a global includes file
  Titanium.include('helpers/prototype_extensions.js');
  Titanium.include('helpers/array.js');
  Titanium.include('appcelerator_database.js');
  Titanium.include('appcelerator_record.js');

  var Order = function() {
    this.klass = 'Order';
    this.tableName = 'orders';
    this.databaseName = 'mydatabase';
    this.createSQL = "(id integer PRIMARY KEY AUTOINCREMENT DEFAULT NULL, uuid Varchar, name Varchar, placed_at Timestamp)"; //just the columns are needed

    var ar = new AppceleratorRecord({databaseName: this.databaseName, tableName: this.tableName, createSQL: this.createSQL });
    this.merge(ar);
    this.addLocalMethods(this);
    
    this.orderExists = function(){
      // custom code here
    };
    
    return this;
  };
We now have full CRUD on a new Order object.

=== CRUD
  var o = new Order();
  o.name = "Test Order";
  o.save(); //create
  o.id // would return the new objects id.
  o.name = "Updated Name";
  o.save(); // update
  o.update('name', 'my updated value'); //update single column
  o.destroy(); // destroy

=== Finders
  new Order.all();
  new Order.find(id);
  new Order.findBy('name', 'Test Order');
  new Order.findAllBy('name', 'Test Order'); // array
  new Order.first();
  new Order.last();
  new Order.count();
  
=== Callbacks
  this.destroyCallback = function(){};